#include <stdio.h>
#include <algorithm>
#include <utility>
using namespace std;

/*struct Vector2 {
    int x;
    int y;

    bool operator<(Vector2 b) {
        if(x==b.first)
            return y>b.second;
        return x<b.first;
    }
};*/

bool Numit(pair<int, int> a, pair<int, int> b) {
        if(a.first==b.first)
            return a.second>b.second;
        return a.first<b.first;
    }

#define DIM 500000
char buff[DIM];
int poz=0;

inline void citeste(int &numar)
{
     numar = 0;
     //cat timp caracterul din buffer nu e cifra ignor
     while (buff[poz] < '0' || buff[poz] > '9')
          //daca am "golit" bufferul atunci il umplu
          if (++poz == DIM)
               fread(buff,1,DIM,stdin),poz=0;
     //cat timp dau de o cifra recalculez numarul
     while ('0'<=buff[poz] && buff[poz]<='9')
     {
          numar = numar*10 + buff[poz] - '0';
          if (++poz == DIM)
               fread(buff,1,DIM,stdin),poz=0;
     }
}

pair<int,int> v[20000];

int main () {
    register int n;
    fread(buff,1,DIM,stdin),poz=0;
    citeste(n);
    for (int i = 0; i < n; i++) {
        citeste(v[i].first);
        citeste(v[i].second);
    }
    std::sort (v, v + n, Numit);

    register int mini = v[0].first;
    register int maxi = v[0].second;
    register int maxicnt = -1;
    register int realcnt = 0;

    for (register int i = 1; i < n; i++) {
        if (v[i].first == mini) {
            ++realcnt;
        } else {
            for (register int k = i; k < n; k++) {
                if (v[k].second <= maxi)
                    realcnt++;
            }
            mini = v[i].first;
            maxi = v[i].second;
            if (realcnt > maxicnt)
                maxicnt = realcnt;
            realcnt = 0;
        }
    }
    if (realcnt > maxicnt)
        maxicnt = realcnt;
    printf("%d",maxicnt);
}
